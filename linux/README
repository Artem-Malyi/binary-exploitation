Prerequisites
1. sudo apt install gcc gcc-multilib gdb make

Build
2. make all
   make rwret - build step1 example: altering execution flow by changing function return address
   make shellcode - build step2 example: position indepented (PI) code that launches /bin/sh
   make nfshellcode - build step3 example: PI and null bytes free (NF) code that launches /bin/sh
   make example1 - build simple non-inlined assembly program in at&t syntax
   make example1 - build position independent and null byte free code version of example1
   make overflow - build step4 example: strcpy and PI NF code
   make fuzzer - build step5 binaries: generator, vulnerable and copies fuzzer.sh
   make clean

Debug
3. Ctrl+x, 1 - source code window
   Ctrl+x, 2 - assembly view window
   b(reakpoint) main
   r(un)
   si(step one instruction)
   x/10xw $esp - examine 10 machine words (4 bytes long) in hex format starting from stack pointer
   x/50c $esp - examine 50 chars in ASCII representaion from stack pointer
   x/s 0xffffccb4 - show ASCII string from given address
